# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  # buildLinux:
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest

  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v2

  #     - uses: krdlab/setup-haxe@master
  #       with:
  #         haxe-version: 4.3.6
  #     # Runs a set of commands using the runners shell
  #     - name: Install Haxelib
  #       run: |
  #         haxelib setup ~/haxelib
  #         haxelib install hxcpp > /dev/null
  #         haxelib install lime
  #         haxelib install openfl
  #         haxelib install flixel
  #         haxelib install flixel-ui
  #         haxelib run lime setup flixel
  #         haxelib run lime setup
  #         haxelib install flixel-tools
  #         haxelib install flixel-addons
  #         haxelib install hscript
  #         haxelib git polymod https://github.com/larsiusprime/polymod.git
  #         haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
  #         haxelib list
  #     - name: Compile
  #       run: haxelib run lime build Project.xml linux -release
  #     - name: Publish Artifact
  #       uses: actions/upload-artifact@v2.2.4
  #       with:
  #         name: linuxBuild
  #         path: "export/release/linux/bin"
  buildWindows:
    runs-on: windows-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2.3.0

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup C:/haxelib
          haxelib install hxcpp > /dev/null
          haxelib install lime 8.1.2 --quiet
          haxelib install openfl 9.3.3 --quiet
          haxelib install flixel 5.6.1 --quiet
          haxelib install flixel-ui 2.6.1 --quiet
          haxelib run lime setup flixel
          haxelib run lime setup
          haxelib install flixel-tools 1.5.1 --quiet
          haxelib install flixel-addons 3.2.2 --quiet
          haxelib install hscript 2.4.0 --quiet
          haxelib install hxdiscord_rpc 1.1.1 --quiet
          haxelib install hxcpp-debug-server 1.2.4 --quiet
          haxelib git polymod https://github.com/larsiusprime/polymod.git --quiet
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc --quiet
          haxelib list
        shell: cmd
      - name: Compile
        run: haxelib run lime build windows -release
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: windowsBuild
          path: export/release/windows/bin
  buildWindowsDebug:
    runs-on: windows-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2.3.0

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup C:/haxelib
          haxelib install hxcpp > /dev/null
          haxelib install lime 8.1.2 --quiet
          haxelib install openfl 9.3.3 --quiet
          haxelib install flixel 5.6.1 --quiet
          haxelib install flixel-ui 2.6.1 --quiet
          haxelib run lime setup flixel
          haxelib run lime setup
          haxelib install flixel-tools 1.5.1 --quiet
          haxelib install flixel-addons 3.2.2 --quiet
          haxelib install hscript 2.4.0 --quiet
          haxelib install hxdiscord_rpc 1.1.1 --quiet
          haxelib install hxcpp-debug-server 1.2.4 --quiet
          haxelib git polymod https://github.com/larsiusprime/polymod.git --quiet
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc --quiet
          haxelib list
        shell: cmd
      - name: Compile
        run: haxelib run lime build windows -debug
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: windowsBuildDebug
          path: export/debug/windows/bin
  # buildMac:
  #   runs-on: macos-latest

  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v2

  #     - uses: krdlab/setup-haxe@master
  #       with:
  #         haxe-version: 4.3.6
  #     # Runs a set of commands using the runners shell
  #     - name: Install Haxelib
  #       run: |
  #         haxelib setup ~/haxelib
  #         haxelib install hxcpp > /dev/null
  #         haxelib install lime
  #         haxelib install openfl
  #         haxelib install flixel
  #         haxelib install flixel-ui
  #         haxelib run lime setup flixel
  #         haxelib run lime setup
  #         haxelib install flixel-tools
  #         haxelib install flixel-addons
  #         haxelib install hscript
  #         haxelib git polymod https://github.com/larsiusprime/polymod.git
  #         haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
  #         haxelib list
  #     - name: Compile
  #       run: haxelib run lime build mac -release
  #     - name: Publish Artifact
  #       uses: actions/upload-artifact@v2.2.4
  #       with:
  #         name: macBuild
  #         path: export/release/macos/bin
