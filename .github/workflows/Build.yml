name: Build - Windows + Android

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  buildAndroid:
    name: buildAndroid
    runs-on: ubuntu-latest
    strategy:
      matrix:
        storage-type: [EXTERNAL]
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Android NDK
        uses: nttld/setup-ndk@main
        id: setup-ndk
        with:
          ndk-version: r21e

      - name: Setup Java JDK
        uses: actions/setup-java@main
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6

      - name: Restore Previous Cache
        id: cache-debug-build-android-restore
        uses: actions/cache/restore@main
        with:
          path: |
            ~/haxelib
            ~/.gradle
            export/release/android/haxe
            export/release/android/obj
          key: cache-android-build

      - name: Install Libraries
        run: |
          haxelib setup ~/haxelib
          haxelib git hxcpp https://github.com/mcagabe19-stuff/hxcpp --quiet
          haxelib git lime https://github.com/mcagabe19-stuff/lime --quiet
          haxelib install openfl 9.3.3 --quiet
          haxelib install flixel 5.6.1 --quiet
          haxelib install flixel-addons 3.2.2 --quiet
          haxelib install flixel-tools 1.5.1 --quiet
          haxelib install flixel-ui 2.6.1 --quiet
          haxelib install flixel-ui 2.6.1 --quiet
          haxelib install hscript 2.4.0 --quiet
          haxelib git polymod https://github.com/larsiusprime/polymod.git --quiet
          haxelib git flxanimate https://github.com/Dot-Stuff/flxanimate 768740a56b26aa0c072720e0d1236b94afe68e3e --quiet
          if [[ "${{ runner.os }}" == "macOS" ]] ; then
            haxelib git linc_luajit https://github.com/superpowers04/linc_luajit 1906c4a96f6bb6df66562b3f24c62f4c5bba14a7 --quiet
          else
            haxelib git linc_luajit https://github.com/mcagabe19-stuff/linc_luajit-legacy --quiet --skip-dependencies
          fi
          haxelib git hxdiscord_rpc https://github.com/MAJigsaw77/hxdiscord_rpc 3538a1c2bb07b04208cd014220207f8173acdb21 --quiet --skip-dependencies
          haxelib git hxvlc https://github.com/MAJigsaw77/hxvlc 70e7f5f3e76d526ac6fb8f0e6665efe7dfda589d --quiet --skip-dependencies
          haxelib git extension-androidtools https://github.com/MAJigsaw77/extension-androidtools 727693f0a76c6e396df675bb0ed95d7639a4db01 --quiet --skip-dependencies

      - name: Configure Android
        run: |
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME
          haxelib run lime config ANDROID_SETUP true
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Compile
        run: haxelib run lime build android -D ${{ matrix.storage-type }} -final
        env:
          cert_pass: nullfunni
          cert_alias_pass: nullfunni

      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: androidBuild
          path: export/release/android/bin/app/build/outputs/apk/release/*.apk

  Windows Release:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6

      - name: Install Libraries
        run: |
          haxelib setup C:\haxelib
          haxelib install hxcpp > /dev/null
          haxelib install lime 8.1.2 --quiet
          haxelib install openfl 9.3.3 --quiet
          haxelib install flixel 5.6.1 --quiet
          haxelib install flixel-ui 2.6.1 --quiet
          haxelib run lime setup flixel
          haxelib run lime setup
          haxelib install flixel-tools 1.5.1 --quiet
          haxelib install flixel-addons 3.2.2 --quiet
          haxelib install hscript 2.4.0 --quiet
          haxelib install hxdiscord_rpc 1.1.1 --quiet
          haxelib install hxcpp-debug-server 1.2.4 --quiet
          haxelib git polymod https://github.com/larsiusprime/polymod.git --quiet
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc --quiet

      - name: Compile
        run: haxelib run lime build windows -final

      - name: Upload Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@main
        with:
          name: windowsBuild
          path: export\release\windows\bin\*
          if-no-files-found: error
  Windows Debug:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6

      - name: Install Libraries
        run: |
          haxelib setup C:\haxelib
          haxelib install hxcpp > /dev/null
          haxelib install lime 8.1.2 --quiet
          haxelib install openfl 9.3.3 --quiet
          haxelib install flixel 5.6.1 --quiet
          haxelib install flixel-ui 2.6.1 --quiet
          haxelib run lime setup flixel
          haxelib run lime setup
          haxelib install flixel-tools 1.5.1 --quiet
          haxelib install flixel-addons 3.2.2 --quiet
          haxelib install hscript 2.4.0 --quiet
          haxelib install hxdiscord_rpc 1.1.1 --quiet
          haxelib install hxcpp-debug-server 1.2.4 --quiet
          haxelib git polymod https://github.com/larsiusprime/polymod.git --quiet
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc --quiet

      - name: Compile
        run: haxelib run lime build windows -debug

      - name: Upload Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@main
        with:
          name: windowsBuild
          path: export\debug\windows\bin\*
          if-no-files-found: error
